# stage build
FROM node:14.19.1 AS build

WORKDIR /tmp/vikadata

# pkg 打包加速环境配置
ENV PKG_CACHE_PATH /tmp/vikadata/.pkg-cache
ENV MAKE_JOB_COUNT 8

COPY .yarn /tmp/vikadata/.yarn

# install packages 可以使用缓存
COPY ./.yarnrc.yml ./package.json ./yarn.lock ./common-tsconfig.json /tmp/vikadata/

ADD .pkg-cache/v*.tar.gz /tmp/vikadata/.pkg-cache/

COPY packages/core /tmp/vikadata/packages/core

COPY packages/i18n-lang /tmp/vikadata/packages/i18n-lang

COPY packages/room-server /tmp/vikadata/packages/room-server

RUN cd /tmp/vikadata && yarn workspaces focus @vikadata/room-server

# 外挂配置文件
COPY packages/room-server/src/config/config.yaml /tmp/vikadata/bin/config/config.yaml

# 下载 pkg 包
RUN npm i pkg@5.6.0 --global

# 编译pkg 可执行文件
RUN cd /tmp/vikadata && \
    yarn workspace @vikadata/i18n-lang run build && \
    yarn workspace @vikadata/core run build && \
    yarn workspace @vikadata/room-server run prebuild && \
    yarn workspace @vikadata/room-server run build && \
    pkg package.json -t node14.19.1-linux-x64 -o ./bin/server.vika

ARG test=false

# TODO: 测试稳定后下面注释代码可以移除
# RUN if test "$test" = 'true'; then yarn test:nest; else echo Argument test not true; fi
# RUN npm i nexe -g --registry=https://registry.npm.taobao.org
# TODO 等nest升级到8.0之后换成pkg 或者next的node版本升级
# RUN nexe --remote https://vika-devops.s3.cn-northwest-1.amazonaws.com.cn -t linux-x64-14.15.3 -n room-server packages/room-server/dist/main.js -o /tmp/vikadata/room-server -r "packages/room-server/**/*.proto" -r "node_modules/bull/lib/commands/**/*" -r "packages/room-server/**/*.lua"

RUN rm -rf packages/room-server/src && \
    rm -rf packages/room-server/dist && \
    rm -rf packages/core/src && \
    rm -rf packages/core/dist

# stage run
# TODO: 如果本地M1 需要调试打开这段注释
#FROM --platform=linux/x86_64 node:14.19.1
FROM node:14.19.1

WORKDIR /home/vikadata

COPY --from=build /tmp/vikadata/bin /home/vikadata/bin

# pm2
RUN npm install pm2 --global

EXPOSE 3333
# grpc接口的端口
EXPOSE 3334
# 统一私有化环境变量
ENV REACT_APP_DEPLOYMENT_MODELS=PRIVATE

# pm2 name 默认：room-server
ENV pm2_name="room-server"

CMD pm2-runtime start ./bin/server.vika --interpreter none --name ${pm2_name} --instances 1