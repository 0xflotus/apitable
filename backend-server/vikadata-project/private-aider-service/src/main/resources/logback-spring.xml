<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!-- the log storage location -->
    <springProperty scope="context" name="LOG_PATH" source="vikadata.log.path" defaultValue="logs"/>
    <!-- log file's name can't be change, default use spring.application.name -->
    <springProperty scope="context" name="LOG_FILE_NAME" source="spring.application.name" defaultValue="App"/>

    <!-- logger format -->
    <!-- print format：%d:date, %thread:thread name, %msg:log message, %n: line break -->
    <!-- %-5level: display 5 characters wide from left -->

    <!-- ****************************************************************************************** -->
    <!-- ****************** local develop only print log in console ******************************* -->
    <!-- ****************************************************************************************** -->
    <springProfile name="local">
        <logger name="com.vikadata" level="debug"/>
        <logger name="springfox.documentation" level="warn"/>
        <!--<logger name="org.springframework.cloud.sleuth" level="debug"/>-->
        <!--<logger name="org.springframework" level="debug"/>-->
        <logger name="brave" level="debug"/>
        <!--local develop debug log level: DEBUG，pre-release and online forbid DEBUG level-->
        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <!--encoder, default encoder config: PatternLayoutEncoder-->
            <encoder>
                <!--tip：log color support：-->
                <!--blue cyan green magenta red yellow-->
                <pattern>%cyan(「local develop debug log」)>>> %yellow(%d{yyyy-MM-dd HH:mm:ss.SSS}) - %red(T[%X{traceId}]) - %red(S[%X{spanId}]) - %red(Thread [%thread]) %highlight(%-5level) %green(%logger{35}) %magenta(Line:%L) - %blue(%msg%n)</pattern>
                <charset>utf-8</charset>
            </encoder>
        </appender>

        <root level="info">
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>

    <!-- ****************************************************************************************** -->
    <!-- ***************** only print log to file when server run in server *********************** -->
    <!-- ****************************************************************************************** -->
    <springProfile name="!local">
        <!-- logger，date rolling record -->
        <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- The path and file name of the log file being recorded now -->
            <file>${LOG_PATH}/${LOG_FILE_NAME}_error.log</file>
            <!-- Rolling policies for loggers: by date, by size  -->
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!-- the path to the archived log. such as today is 2013-12-21,
                     the current path of writing log file is file element value.
                     We can set the log file to a different path from the file element value,
                     to put the current log file or archive log file in a different directory.
                     so 2013-12-21's log file is fileNamePattern element value.
                     %d{yyyy-MM-dd} meaning date format，%i meaning index -->
                <fileNamePattern>${LOG_PATH}/backup/${LOG_FILE_NAME}-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <!-- If roll back by day, the maximum storage time is 60 days.
                     anything older than 60 days will be cleared away.
                     The value here relates to the rolling policy pattern. -->
                <maxHistory>60</maxHistory>
                <!-- a log file cannot exceed 2 MB. If exceed 2M, log file's name's index re begin 0.
                     such as: log-error-2013-12-21.0.log -->
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>5MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
            <!-- log is append -->
            <append>true</append>
            <!-- log file's output format -->
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>Log >>> %d{yyyy-MM-dd HH:mm:ss.SSS} T[%X{traceId}] - S[%X{spanId}] - [%thread] %-5level %logger Line:%-3L - %msg%n</pattern>
                <charset>utf-8</charset>
            </encoder>
            <!-- this logger only record level: error -->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>error</level>
                <onMatch>ACCEPT</onMatch>
                <onMismatch>DENY</onMismatch>
            </filter>
        </appender>

        <!-- async output -->
        <appender name="ASYNC_FILE_ERROR" class="ch.qos.logback.classic.AsyncAppender">
            <!-- forbid lose logs. default, when queue's elements greater than 80%, lose TRACT、DEBUG、INFO log -->
            <discardingThreshold>0</discardingThreshold>
            <!-- change default queue's size. the value affect performance, default 256 -->
            <queueSize>256</queueSize>
            <!-- add additional appender, maximum one -->
            <appender-ref ref="FILE_ERROR"/>
        </appender>

        <!-- Logger, full logging -->
        <appender name="FILE_TOTAL" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <!-- The path and file name of the log file being recorded now -->
            <file>${LOG_PATH}/${LOG_FILE_NAME}_total.log</file>
            <!-- Rolling policies for loggers: by date, by size -->
            <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                <!-- the path to the archived log. such as today is 2013-12-21,
                    the current path of writing log file is file element value.
                    We can set the log file to a different path from the file element value,
                    to put the current log file or archive log file in a different directory.
                    so 2013-12-21's log file is fileNamePattern element value.
                    %d{yyyy-MM-dd} meaning date format，%i meaning index -->
                <fileNamePattern>${LOG_PATH}/backup/${LOG_FILE_NAME}-total-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
                <!-- If roll back by day, the maximum storage time is 60 days.
                     anything older than 60 days will be cleared away.
                     The value here relates to the rolling policy pattern. -->
                <maxHistory>60</maxHistory>
                <!-- a log file cannot exceed 5 MB. If exceed 5M, log file's name's index re begin 0.
                     such as: log-error-2013-12-21.0.log -->
                <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                    <maxFileSize>5MB</maxFileSize>
                </timeBasedFileNamingAndTriggeringPolicy>
            </rollingPolicy>
            <!-- log is append -->
            <append>true</append>
            <!-- log file's format -->
            <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
                <pattern>Log >>> %d{yyyy-MM-dd HH:mm:ss.SSS} T[%X{traceId}] - S[%X{spanId}] - [%thread] %-5level %logger Line:%-3L - %msg%n</pattern>
                <charset>utf-8</charset>
            </encoder>
        </appender>

        <!-- async output -->
        <appender name="ASYNC_FILE_TOTAL" class="ch.qos.logback.classic.AsyncAppender">
            <!-- forbid lose logs. default, when queue's elements greater than 80%, lose TRACT、DEBUG、INFO log -->
            <discardingThreshold>0</discardingThreshold>
            <!-- change default queue's size. the value affect performance, default 256 -->
            <queueSize>256</queueSize>
            <!-- add additional appender, maximum one -->
            <appender-ref ref="FILE_TOTAL"/>
        </appender>

        <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
            <!--encoder, default encoder: PatternLayoutEncoder-->
            <encoder>
                <!--tip：log color support：-->
                <!--blue cyan green magenta red yellow-->
                <pattern>「Log」>>> %d{yyyy-MM-dd HH:mm:ss.SSS} - T[%X{traceId}] - S[%X{spanId}] - Thread[%thread] %-5level %logger{35} Line:%L - %msg%n</pattern>
                <charset>utf-8</charset>
            </encoder>
        </appender>


        <root level="info">
            <appender-ref ref="ASYNC_FILE_ERROR"/>
            <appender-ref ref="ASYNC_FILE_TOTAL"/>
            <appender-ref ref="CONSOLE"/>
        </root>
    </springProfile>
</configuration>