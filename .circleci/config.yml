# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  node: circleci/node@5.0.2
  profiling: nanophate/docker-profiling@0.3.0

jobs:
  # build_room_server:
  #   docker:
  #     - image: cimg/node:16.15.0
  #   steps:
  #     - checkout
  #     - profiling/network
  #     - setup_remote_docker:
  #         version: 20.10.12
  #         docker_layer_caching: true # DLC will explicitly cache layers here and try to avoid
  #     - run:
  #         name: Build Room Docker
  #         command: |
  #           # 开启Docker buildx
  #           export DOCKER_BUILDKIT=1
            
  #           # Init Get SemVer from Circle CI Environment Variables (Github https://github.com/vikadata/devops/blob/main/scripts/semver_ci/semver_ci.sh)
  #           eval "$(curl -fsSL -H 'Authorization: token '"$CR_PAT" https://raw.githubusercontent.com/vikadata/devops/main/scripts/semver_ci/semver_ci.sh)"

  #           build_docker_nodejs room-server

  # build_web_server:
  #   docker:
  #     - image: cimg/node:16.15.0
  #   steps:
  #     - checkout
  #     - profiling/network
  #     - setup_remote_docker:
  #         version: 20.10.12
  #         docker_layer_caching: true
  #     - run:
  #         name: Build Web Docker
  #         no_output_timeout: 60m
  #         command: |
  #           # 开启Docker buildx
  #           export DOCKER_BUILDKIT=1
            
  #           # Init Get SemVer from Circle CI Environment Variables (Github https://github.com/vikadata/devops/blob/main/scripts/semver_ci/semver_ci.sh)
  #           eval "$(curl -fsSL -H 'Authorization: token '"$CR_PAT" https://raw.githubusercontent.com/vikadata/devops/main/scripts/semver_ci/semver_ci.sh)"

  #           . scripts/build_web.sh
  
#  e2e_test:
#    docker:
#      - image: cypress/base:14.16.0
#        environment:
#          ## this enables colors in the output
#          TERM: xterm
#    steps:
#      - checkout
#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            - v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
#            - v1-deps-{{ .Branch }}
#            - v1-deps
#
#      - run:
#          name: Install Dependencies
#          command: yarn install --frozen-lockfile
#
#      - save_cache:
#          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
#          paths:
#            - ~/.cache ## cache both yarn and Cypress!
#      - run:
#          name: E2E Test
#          command: yarn cy:run

build_filters: &build_filters
  branches:
    only:
      - integration
      - integration-*
      - /^integration-.*/
      - staging
      - /^staging-.*/
      - test
      - /^test-.*/
  tags:
    only: /^v.*/

# unit_test filter condition
e2e_test_filters: &e2e_test_filters
  branches:
    only:
      - /^test-.*/
    # ignore:
    #   - master

workflows:
  default:
    jobs:
      # - build_web_server:
      #     filters: *build_filters
      # - build_room_server:
      #     filters: *build_filters
      - e2e_test:
          filters: *e2e_test_filters
