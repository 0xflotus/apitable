import org.apache.tools.ant.filters.ReplaceTokens

import java.nio.charset.StandardCharsets
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

plugins {
  id 'java'
  id 'org.springframework.boot'
}

dependencies {
  implementation project(':vikadata-core')
  implementation project(':vikadata-define')
  implementation project(':vikadata-service:vikadata-db-model')
  implementation project(':vikadata-starters:vikadata-starter-xxl')
  implementation project(':vikadata-starters:vikadata-starter-vika')

  annotationProcessor rootProject.ext.dependencies['configuration-processor']
  implementation rootProject.ext.dependencies['spring-web-starter']

  implementation rootProject.ext.dependencies['mybatis-plus-starter']
  runtimeOnly rootProject.ext.dependencies['mysql']
  
  implementation rootProject.ext.dependencies['hutool']
  
  annotationProcessor rootProject.ext.dependencies['lombok']
  compileOnly rootProject.ext.dependencies['lombok']
  
  testImplementation rootProject.ext.dependencies['spring-test-starter']
}

def profile = System.getProperty("profile") ?: "local"

println 'Build Profileï¼š' + profile

processResources {
  filesMatching("**/*.yml") {
    it.filter(ReplaceTokens, tokens: [
      profile : profile,
      revision: revision
    ])
    
    if ("application-${profile}.yml" != it.name && it.name != 'application.yml') {
      it.exclude()
    }
  }
}

compileJava.dependsOn processResources
bootJar.dependsOn processResources

// Compile Java Setting
tasks.withType(JavaCompile) {
  options.encoding = StandardCharsets.UTF_8
  options.warnings = false
  options.deprecation = true
  options.compilerArgs += ["-parameters"]
}

jar {
  enabled = false
}

// Java Plugin On Gradle
bootJar {
  manifest {
    attributes 'Start-Class': 'com.vikadata.scheduler.bill.SchedulerBillApplication'
    attributes 'Implementation-Version': archiveVersion
    attributes 'Built-Gradle': gradle.gradleVersion
    attributes 'Build-OS': System.getProperty("os.name")
    attributes 'Built-By': System.getProperty("user.name")
    attributes 'Build-Jdk': System.getProperty("java.version")
    attributes 'Build-Timestamp': LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss"))
  }
}

// SpringBoot Plugin On Gradle
springBoot {
  mainClass.set('com.vikadata.scheduler.bill.SchedulerBillApplication')
}


